#
# MOS6510 CPU test suite.
#
# If a test fails the emulator is halted with exit code 0.
# If all tests succeed the emulator is terminated with exit code 1.
#
########################################
# Clear registers
########################################
a 5000
a9 00
a0 00
a2 00
48
28
.
b 5008


########################################
# ADC ($zp, X) - 61
########################################
#
# lda #$50
# sta $0044
# lda #$00
# sta $0045
# lda #$01
# sta $0050
# ldx #$04
# lda #$ff
# clc
# adc ($40, x)
#
a 4000
ea
a9 50
8d 44 00
a9 00
8d 45 00
a9 01
8d 50 00
a2 04
a9 ff
18
61 40
02
.
b 4017 ra == #$00
g 5000
g 4000
bd 4017


########################################
# ADC $zp - 65
########################################
#
# Add -126 to -10, that would result in -136 which is bigger than -127
# then the result must be #$78 in register A with V and C flags set.
#
# lda -126 = #$82
# sta $0045
# lda -10  = #$f6
# clc
# adc $45
#
a 4000
ea
a9 82
8d 45 00
a9 f6
18
65 45
ea
02
.
b 400b ra == #$78
b 400c rp == #$61
g 5000
g 4000
g .
bd 400b
bd 400c


########################################
# ADC #$imm - 69
########################################
#
# -1 + (-2) = -3, N and C set.
#
a 4000
ea
a9 ff
18
69 fe
ea
02
.
b 4006 ra == #$fd
b 4007 rp == #$a1
g 5000
g 4000
g .
bd 4006
bd 4007


########################################
# ADC $abs - 6D
########################################
#
# See ADC $zp
#
# lda -10
# sta $0045
# lda -126
# adc $0045
#
a 4000
ea
a9 f6
8d 45 00
a9 82
18
6d 45 00
ea
02
.
b 400c ra == #$78
b 400d rp == #$61
g 5000
g 4000
g .
bd 400c
bd 400d


########################################
# ADC ($zp), Y - 71
########################################
#
# -1 + (-2) = -3, N and C flags set.
#
# lda #$ff
# sta $0050
# lda #$4c
# sta $0044
# lda #$00
# sta $0045
# ldy #$04
# clc
# lda #$fe      ;fe = -2
# adc ($44), y  ;A + *(*44 + y) = -2 + *($4c + 4) = -2 + (-1)
#
a 4000
ea
a9 ff
8d 50 00
a9 4c
8d 44 00
a9 00
8d 45 00
a0 04
18
a9 fe
71 44
ea
02
.
b 4017 ra == #$fd
b 4018 rp == #$a1
g 5000
g 4000
g .
bd 4017
bd 4018


########################################
# ADC $zp, X - 75
########################################
#
# -5 + 5 = 0, Z and C flags set.
#
# lda #$fb      ;fb = -5
# sta $0054
# ldx #$04
# clc
# lda #$05
# adc $54, x
#
a 4000
ea
a9 fb
8d 54 00
a2 04
18
a9 05
75 50
ea
02
.
b 400d ra == #$00
b 400e rp == #$23
g 5000
g 4000
g .
bd 400d
bd 400e


########################################
# ADC $abs, Y - 79
########################################
#
# -5 + 10 = 5, C flag set.
#
# lda #$fb      ;fb = -5
# sta $0054
# ldy #$04
# clc
# lda #$0a
# adc $0050, y
#
a 4000
ea
a9 fb
8d 54 00
a0 04
18
a9 0a
79 50 00
ea
02
.
b 400e ra == #$05
b 400f rp == #$21
g 5000
g 4000
g .
bd 400e
bd 400f


########################################
# ADC $abs, X - 7D
########################################
#
# 10 + (-5) = 5, C flag set.
#
# lda #$0a
# sta $0054
# ldx #$04
# clc
# lda #$fb      ;fb = -5
# adc $0050, y
#
a 4000
ea
a9 0a
8d 54 00
a2 04
18
a9 fb
7d 50 00
ea
02
.
b 400e ra == #$05
b 400f rp == #$21
g 5000
g 4000
g .
bd 400e
bd 400f


########################################
# ADC - BCD Operations
########################################
#
# 90 + 80 = 70, V and C set
#
a 4000
ea
18
f8
a9 90
69 80
02
ea
02
.
b 4007 ra == #$70
b 4009 rp == #$69
g 5000
g 4000
g 4008
bd 4007
bd 4009


#
# 90 + 09 = 99, V and C not set
#
a 4000
ea
18
f8
a9 90
69 09
02
ea
02
.
b 4007 ra == #$99
b 4009 rp == #$a8
g 5000
g 4000
g 4008
bd 4007
bd 4009


#
# 99 + 61 = 60, V not set, C set
#
a 4000
ea
18
f8
a9 99
69 61
02
ea
02
.
b 4007 ra == #$60
b 4009 rp == #$29
g 5000
g 4000
g 4008
bd 4007
bd 4009


#
# 60 + 01 + C = 62, V and C not set
#
a 4000
ea
69 01
02
ea
02
.
b 4003 ra == #$62
b 4005 rp == #$28
g 4000
g 4004
bd 4003
bd 4005


#
# Success
#
quit 1